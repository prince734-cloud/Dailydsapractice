#include <iostream>
using namespace std;

  class Node {
  public:
    int data;
    Node* next;
    Node* prev;
    
    Node(int val){
        data=val;
        next=prev=NULL;
        
    }
};
  class doublylist {
      Node* head;
      Node* tail;
    public:
       doublylist(){
      head=tail=NULL;
       }
       void push_front(int val){
          Node* newnode = new Node(val);
      
        if(head==NULL){
          head=tail=newnode;
        }
         else {
          newnode->next=head;
          head->prev=newnode;
          head=newnode;
        }
      }
      
      void printlist(){
          Node* temp=head;
          while(temp!=NULL){
              cout<<temp->data<<endl;
              temp=temp->next;
          }
          cout<<"NULL\n";
      }
      void push_back(int val){
          Node* newnode = new Node(val);
          if(head==NULL){
              head=tail=newnode;
              
          }
          else{
              newnode->prev=tail;
              tail->next=newnode;
              tail=tail->next;
          }
      }
      void pop_front(){
          if(head==NULL){
              cout<<"val not exist for pop"<<endl;
          }
          else{
              Node* temp=head;
              head=head->next;
              if(head!=NULL){
                  head->prev=NULL;
              }
              temp->next=NULL;
              delete temp;
          }
      }
      void pop_back(){
          
          if(head==NULL){
              cout<<"no value is present for delete"<<endl;
          }
          else{
              Node*temp =tail;
              tail=tail->prev;
              if(tail!=NULL){
                  tail->next=NULL;
              }
              temp->prev=NULL;
              delete temp;
              
              
          }
      }
      
  };
  
  
  int main()
{
    doublylist dlist;
    dlist.push_front(1);
    dlist.push_front(2);
    dlist.push_front(3);
    dlist.push_front(4);
    dlist.push_back(6);
    dlist.push_back(7);
    dlist.pop_front();
    dlist.pop_front();
    dlist.pop_back();
    dlist.printlist();
    
    return 0;
}
