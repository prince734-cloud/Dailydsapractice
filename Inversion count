#include <iostream>
#include<vector>
using namespace std;

int merge(vector<int>& arr , int st ,int mid ,int end){
    vector<int> temp;
    int invcount=0;
    int i=st,j=mid+1;
    while(i<=mid &&j<=end){
        if(arr[i]<=arr[j]){
            temp.push_back(arr[i]);
            i++;
            
        } else { //arr[i]>arr[j]
          invcount+=(mid-i+1);
          temp.push_back(arr[j]);
          j++;
                
        }
    }
    while(i<=mid){
        temp.push_back(arr[i]);
        i++;
    }
    while(j<=end){
        temp.push_back(arr[j]);
        j++;
    }
    for(int idx=0; idx<=temp.size()-1;idx++){
        arr[st+idx]=temp[idx];
    }
    return invcount;
}

int mergesort(vector<int> &arr ,int st ,int end){
    if(st<end){
    int mid = st+ (end-st)/2;
    int linvcount= mergesort(arr,st,mid);
    int rinvcount= mergesort(arr,mid+1,end);
     int invcount= merge(arr,st,mid,end);
     
     return linvcount + rinvcount +invcount;
    }
    return 0;
}

int main()
{ vector<int> arr={6,3,5,2,7};
  int ans =mergesort(arr,0,arr.size()-1);
  cout<<ans<<endl;
    
    return 0;
}
