vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> dq;
        vector<int> ans;
        for(int i=0;i<k;i++){// for first k values

            while(dq.size()>0 && nums[dq.back()]<=nums[i] ){// compare current element with dq value if dq <curr then remove de elem;
                dq.pop_back();
            }
            dq.push_back(i);
        }

        for(int i=k;i<nums.size();i++){ // for rest of values
            ans.push_back(nums[dq.front()]);

            //remove elements from deque which are not part of current window
            while(dq.size()>0 && dq.front()<i-k+1){
                dq.pop_front();
            }
             while(dq.size()>0 && nums[dq.back()]<=nums[i] ){// compare current element with dq value if dq <curr then remove de elem;
                dq.pop_back();
        }
        dq.push_back(i);
        
    }
    ans.push_back(nums[dq.front()]);
    return ans;
    }
